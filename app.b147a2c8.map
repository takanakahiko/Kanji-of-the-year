{"version":3,"sources":["script/sub_modules/util.ts","script/sub_modules/Brush.ts","script/Main.ts","app.js"],"names":[],"mappings":"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","file":"app.b147a2c8.map","sourceRoot":"../src","sourcesContent":["export const clamp = (n:number, max:number, min:number):number => {\n    if (typeof min !== 'number') min = 0;\n    return n > max ? max : n < min ? min : n;\n}\n\nexport const random = (max:number, min:number):number => {\n    if (typeof max !== 'number') {\n        return Math.random();\n    } else if (typeof min !== 'number') {\n        min = 0;\n    }\n    return Math.random() * (max - min) + min;\n}\n\nexport function getAdjustedPosition(x, y, target){\n    let rect = target.getBoundingClientRect();\n    let xx = Math.round(target.width * (x - rect.left) / target.clientWidth);\n    let yy = Math.round(target.height * (y - rect.top) / target.clientHeight);\n    return [xx, yy];\n}\n","import {random, clamp} from './util'\n\nexport class Brush{\n    private hairs: Hair[] = []\n    isTouch:boolean = false\n\n    constructor(\n        private size:number,\n        private amount:number,\n        private ctx:CanvasRenderingContext2D,\n    ){}\n    \n    down(x:number, y:number){\n        this.isTouch = true\n        const hairNum = this.size * 4\n        const rangeMax = this.size\n        for (let i = 0; i < hairNum; i++) {\n            const range = random(rangeMax, 0)\n            const dx = Math.sin(range) * range\n            const dy = Math.cos(range) * range\n            this.hairs[i] = new Hair(dx, dy, 3, this.amount * random(1, 0.5), this.ctx);\n        }\n        this.hairs.forEach( h => h.down(x,y) )\n    }\n\n    move(x:number, y:number){\n        if(this.isTouch) this.hairs.forEach( h => h.move(x,y) )\n    }\n\n    up(){\n        this.isTouch = false\n    }\n\n}\n\nclass Hair{\n    private x: number = 0\n    private y: number = 0\n\n    constructor(\n        private dx:number,\n        private dy:number,\n        private size:number,\n        private amount:number,\n        private ctx:CanvasRenderingContext2D,\n    ){}\n\n    down(parentX:number, parentY:number){\n        this.ctx.save()\n        this.x = parentX + this.dx\n        this.y = parentY + this.dy\n        const hsla = new HSLA(1,1,1,1)\n        this.ctx.fillStyle = hsla.toString()\n        this.ctx.beginPath()\n        this.ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2, false)\n        this.ctx.fill()\n        this.ctx.restore()\n    }\n\n    move(parentX:number, parentY:number) {\n        this.ctx.save()\n        const [oldX, oldY] = [this.x , this.y]\n        this.x = parentX + this.dx\n        this.y = parentY + this.dy\n        const hsla = new HSLA(1,1,1,1)\n        var speed = Hair.distance(oldX, oldY, this.x, this.y)\n        hsla.a = this.amount / speed\n        this.ctx.lineCap = 'round'\n        this.line(oldX, oldY, this.x, this.y, hsla, this.size/2)\n        hsla.a = clamp((1 - speed / this.amount) * 0.3, 0.3, 0)\n        this.ctx.lineCap = 'butt'\n        this.line(oldX, oldY, this.x, this.y, hsla, this.size)\n        this.ctx.restore()\n    }\n\n    private line(oldX:number, oldY:number, newX:number, newY:number, hsla:HSLA, width:number){\n        this.ctx.strokeStyle = hsla.toString()\n        this.ctx.lineWidth = width\n        this.ctx.beginPath()\n        this.ctx.moveTo(oldX, oldY)\n        this.ctx.lineTo(newX, newY)\n        this.ctx.stroke()\n    }\n\n    static distance(x1: number, y1:number, x2: number, y2:number): number{\n    　　return Math.sqrt(Math.pow(x1 - x2,2) + Math.pow(y1 - y2,2));\n    }\n}\n\nclass HSLA{\n    constructor(\n        public h:number,\n        public s:number,\n        public l:number,\n        public a:number,\n    ){}\n    toString(){\n        return 'hsla(' + this.h + ', ' + this.s + '%, ' + this.l + '%, ' + this.a + ')';\n    }\n}","import {Brush} from \"./sub_modules/Brush\"\nimport { getAdjustedPosition } from \"./sub_modules/util\"\n\nconst backgroundSrc = require('../base.jpg');\n\nconst start = () => {\n    const canvas = <HTMLCanvasElement> window.document.getElementById('canvas')\n    const ctx:CanvasRenderingContext2D = canvas.getContext(\"2d\")\n    const brush = new Brush(10, 15, ctx)\n    canvas.addEventListener('mousedown', (e:MouseEvent) =>{\n        const [x,y] = getAdjustedPosition(e.clientX, e.clientY, canvas)\n        brush.down(x , y)\n    })\n    canvas.addEventListener('mousemove' , (e:MouseEvent) =>{\n        const [x,y] = getAdjustedPosition(e.clientX, e.clientY, canvas)\n        brush.move(x , y)\n    })\n    canvas.addEventListener('mouseup' , (e:MouseEvent) =>{\n        brush.up()\n    })\n    canvas.addEventListener('mouseover' , (e:MouseEvent) =>{\n        brush.up()\n    })\n    canvas.addEventListener('touchstart', (e:TouchEvent) =>{\n        const touchObject = e.touches[0]\n        const [x,y] = getAdjustedPosition(touchObject.pageX, touchObject.pageY, canvas)\n        brush.down(x , y)\n    })\n    canvas.addEventListener('touchmove' , (e:TouchEvent) =>{\n        e.preventDefault()\n        const touchObject = e.touches[0]\n        const [x,y] = getAdjustedPosition(touchObject.pageX, touchObject.pageY, canvas)\n        brush.move(x , y)\n    })\n    canvas.addEventListener('touchend' , (e:TouchEvent) =>{\n        brush.up()\n    })\n}\n\nconst finish = () => {\n    const canvas = <HTMLCanvasElement> window.document.getElementById('canvas')\n    const ctx:CanvasRenderingContext2D = canvas.getContext(\"2d\")\n    const drawData:string = canvas.toDataURL('image/png')\n    const background:HTMLImageElement = new Image();\n    background.addEventListener('load',()=>{\n        ctx.drawImage(background,0,0, 650, canvas.height)\n        const drawImg = new Image()\n        drawImg.addEventListener('load',()=>{\n            ctx.translate(220,60)\n            ctx.transform(0.4, 0, -0.05, 0.6, 50, 50)\n            ctx.rotate(5 * Math.PI / 180)\n            ctx.drawImage(drawImg, 100, 0)\n            var img:HTMLImageElement = document.getElementById(\"ret\") as HTMLImageElement\n            img.addEventListener('load',()=>{\n                canvas.style.display = 'none'\n                img.style.display = 'inline-block'\n                document.getElementById('end').style.display = 'none'\n                document.getElementById('message').style.display = 'inline'\n                document.getElementById('tweet_button').style.display = 'inline'    \n            })\n            img.src = canvas.toDataURL('image/png')\n            const imageBase64 = <HTMLInputElement> document.getElementById('imageBase64')\n            imageBase64.value = canvas.toDataURL('image/png')\n        })\n        drawImg.src = drawData\n    })\n    background.src = backgroundSrc\n}\n \nconst main = () => {\n    start()\n    const button2 = <HTMLInputElement> window.document.getElementById('end')\n    button2.addEventListener('click' , () =>{\n        finish()\n    })\n}\n\nwindow.addEventListener(\"DOMContentLoaded\", main);","import \"./script/Main.ts\";"]}